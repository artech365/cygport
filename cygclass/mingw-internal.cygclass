################################################################################
#
# mingw-internal.cygclass - internal functions for mingw*.cygclass
#
# Part of cygport - Cygwin packaging application
# Copyright (C) 2006-2020 Cygport authors
# Provided by the Cygwin project <https://cygwin.com/>
#
# cygport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cygport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cygport.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

__mingw_init() {
	local a=${1} t=${2}
	local c h n p r s v

	declare -g MINGW${t}_HOST="${a}-w64-mingw32"
	declare -g MINGW${t}_TARGET="${a}-w64-mingw32"

	h=MINGW${t}_HOST
	for c in CC=gcc CXX=g++ F77=gfortran FC=gfortran OBJC=gcc OBJCXX=g++ \
		AR=ar DLLTOOL=dlltool NM=nm OBJDUMP=objdump RANLIB=ranlib \
		RC=windres STRIP=strip PKG_CONFIG=pkg-config QT5_QMAKE=qmake-qt5
	do
		declare -g MINGW${t}_${c%=*}="${!h}-${c#*=}"
	done
	if inherited clang
	then
		declare -g MINGW${t}_CC="${!h}-clang"
		declare -g MINGW${t}_CXX="${!h}-clang++"
	fi

	declare -g MINGW${t}_SYSROOT="/usr/${!h}/sys-root"
	r=MINGW${t}_SYSROOT
	declare -g MINGW${t}_PREFIX="${!r}/mingw"
	p=MINGW${t}_PREFIX
	declare -g MINGW${t}_BINDIR="${!p}/bin"
	declare -g MINGW${t}_INCLUDEDIR="${!p}/include"
	declare -g MINGW${t}_LIBDIR="${!p}/lib"
	declare -g MINGW${t}_DATADIR="${!p}/share"

	if inherited mingw && [[ ${MINGW_ARCHS} =~ "${a}" ]] && [[ "${NAME}" =~ "mingw-" ]]
	then
		_CYGPORT_INTERNAL_multi_doc_=1
		n=${NAME#mingw-}
		PKG_NAMES+=" mingw64-${a}-${n}"
		declare -g mingw64_${a}_${n//[-\.]/_}_CONTENTS="${!p#/} usr/share/doc/mingw64-${a}-${n}/"
	fi
}

__mingw_wrapper() {
	local mingw_cc mingw_cxx
	local tgt=${1}
	shift

	__check_triplet ${tgt}

	if inherited clang
	then
		mingw_cc=${tgt}-clang
		mingw_cxx=${tgt}-clang++
	else
		mingw_cc=${tgt}-gcc
		mingw_cxx=${tgt}-g++
	fi

	if ! check_prog ${mingw_cc} || ! check_prog ${tgt}-strip
	then
		error "This package requires ${tgt} binutils and gcc"
	fi

	if ! defined __MINGW_WRAPPER_NO_CWD
	then
		mkdir -p ${tgt}/${MINGW_BUILDDIR_SUFFIX}
		pushd ${tgt}/${MINGW_BUILDDIR_SUFFIX}
	fi

	inform "running ${1} for ${tgt}"

	CHOST=${tgt} \
	CTARGET=${tgt} \
	CC=${mingw_cc} \
	CXX=${mingw_cxx} \
	F77=${tgt}-gfortran \
	FC=${tgt}-gfortran \
	OBJC=${mingw_cc} \
	OBJCXX=${mingw_cxx} \
	AR=${tgt}-ar \
	DLLTOOL=${tgt}-dlltool \
	NM=${tgt}-nm \
	OBJDUMP=${tgt}-objdump \
	RANLIB=${tgt}-ranlib \
	RC=${tgt}-windres \
	STRIP=${tgt}-strip \
	PKG_CONFIG=${tgt}-pkg-config \
	QT5_QMAKE=${tgt}-qmake-qt5 \
	CC_SYSROOT=/usr/${tgt}/sys-root \
	CFLAGS="${CFLAGS/-Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong}" \
	CXXFLAGS="${CXXFLAGS/-Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong}" \
	"${@}" || error "${1} for ${CHOST} failed"

	if ! defined __MINGW_WRAPPER_NO_CWD
	then
		popd
	fi
}

readonly -f __mingw_init __mingw_wrapper
